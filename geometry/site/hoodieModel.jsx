/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three"
import React, { forwardRef, useRef, useContext } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import { UIContext } from "../../src/App"
import { useHueMat } from "./hueMaterial";


const HoodieModel = forwardRef( (props, ref) => {
  const { currentShape, modelColor } = useContext(UIContext);
  const { nodes, materials } = useGLTF('../geometry/site/hoodie.gltf');
  const tmap = useTexture('../images/lightbakes/hoodie.png');
  const matColor = new THREE.Color(modelColor.find(d => d.name == "chest").color);
  let visibility = currentShape.chest.models[currentShape.chest.curr] == "hoodie";
  const mat = useHueMat(matColor, tmap, false);

  return (
    <group {...props} dispose={null}>
      <mesh
        ref={ref}
        material={mat}
        visible={visibility}
        castShadow
        receiveShadow
        geometry={nodes.hoodie.geometry}
        // material={nodes.head.material}
        userData={{modelType: "chest"}}
      >
      </mesh>
    </group>
  )
})

useGLTF.preload('../geometry/site/hoodie.gltf')

export default HoodieModel;